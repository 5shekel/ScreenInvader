#!/bin/bash


FUNCTION="$1"
declare -A DATA="$(janosh /network/.)"

function makeHostname() {
  echo "${DATA[/network/hostname]}" > "/etc/hostname"
}

function makeNetworkDhcp() {
  interface="${DATA[/network/interface]}"

  cat > /etc/network/interfaces <<EODHCPCONF
auto lo
iface lo inet loopback
allow-hotplug $interface
iface $interface inet dhcp
EODHCPCONF
}

function makeNetworkMan() {
  addr="${DATA[/network/address]}"
  netmask="${DATA[/network/netmask]}"
  gateway="${DATA[/network/gateway]}"
  interface="${DATA[/network/interface]}"

  cat > /etc/network/interfaces <<EONETCONF
auto lo
iface lo inet loopback
allow-hotplug $interface
iface $interface inet static
address $addr
netmask $netmask
gateway $gateway
EONETCONF
}

function makeWifi() {
  ssid="${DATA[/network/wifi/ssid]}"
  encryption="${DATA[/network/wifi/encryption/value]}"
  passphrase="${DATA[/network/wifi/passphrase]}"
  
  networks="`wpa_cli list_networks | grep -o "^[0-9]*"`"
  for id in $networks; do
    wpa_cli remove_network "$id"
  done
  wpa_cli add_network
  wpa_cli set_network 0 ssid "\"$ssid\""
  wpa_cli set_network 0 scan_ssid 1
  wpa_cli set_network 0 key_mgmt "$encryption"
  wpa_cli set_network 0 psk "\"$passphrase\""
  wpa_cli enable_network 0
}

function makeDns() {
  dns="${DATA[/network/nameserver]}"

  cat > /etc/resolv.conf <<EORESOLVCONF
domain local
search local
nameserver $dns
EORESOLVCONF
}

function readWirelessNic() {
  cat /proc/net/wireless | grep -Po '^ \K([A-Za-z0-9]*)(?=:)'
}

function readWiredNic() {
  #match for interface that start with 'e'
  cat /proc/net/dev | grep -Po '^\s*\K(e[A-Za-z0-9]*)(?=:)'
}

function reload() {
  interface="${DATA[/network/interface]}"

  killall wpa_supplicant
  ifconfig "$interface" down

  #http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=550240
  /etc/init.d/networking stop
  /etc/init.d/networking start
  wpa_cli reconfigure
}

if [ "$(type -t "$FUNCTION")" == "function" ]; then
  $FUNCTION
else
  echo "Unknown command: $FUNCTION" 1>&2
  exit 1
fi


