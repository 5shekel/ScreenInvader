#!/bin/bash

CALL=

while getopts 'c:' c
do
  case $c in
    c) CALL="$OPTARG";;
  esac
done

shift $(($OPTIND - 1))

declare -A ARGS="$@"

function makeSmb() { 
  user="${ARGS[/storage/smb/user]}"
  pass="${ARGS[/storage/smb/password]}"
  domain="${ARGS[/storage/smb/domain]}"
  host="${ARGS[/storage/smb/host]}"
  dir="${ARGS[/storage/smb/directory]}"

  cat > /etc/auto.smb <<EOSMBCONF
$host$dir      -fstype=cifs,users,user=$user,password=$pass,domain=$domain,ro ://$host/$dir
EOSMBCONF
}

function makeHostname() {
  echo "${ARGS[/network/hostname]}" > "/etc/hostname"
}


function makeNetworkDhcp() {
  interface="${ARGS[/network/interface]}"

  cat > /etc/network/interfaces <<EODHCPCONF
auto lo
iface lo inet loopback
allow-hotplug $interface
iface $interface inet dhcp
EODHCPCONF
}

function makeNetworkMan() {
  addr="${ARGS[/network/address]}"
  netmask="${ARGS[/network/netmask]}"
  gateway="${ARGS[/network/gateway]}"
  interface="${ARGS[/network/interface]}"

  cat > /etc/network/interfaces <<EONETCONF
auto lo
iface lo inet loopback
allow-hotplug $interface
iface $interface inet static
address $addr
netmask $netmask
gateway $gateway
EONETCONF
}

function makeWifi() {
  ssid="${ARGS[/network/wifi/ssid]}"
  encryption="${ARGS[/network/wifi/encryption/value]}"
  passphrase="${ARGS[/network/wifi/passphrase]}"
  
  networks="`wpa_cli list_networks | grep -o "^[0-9]*"`"
  for id in $networks; do
    wpa_cli remove_network "$id"
  done
  wpa_cli add_network
  wpa_cli set_network 0 ssid "\"$ssid\""
  wpa_cli set_network 0 scan_ssid 1
  wpa_cli set_network 0 key_mgmt "$encryption"
  wpa_cli set_network 0 psk "\"$passphrase\""
  wpa_cli enable_network 0
}

function reload() {
  interface="${ARGS[/network/interface]}"

  killall wpa_supplicant
  ifconfig "$interface" down

  #http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=550240
  /etc/init.d/networking stop
  /etc/init.d/networking start
  wpa_cli reconfigure
}

function makeDns() {
  dns="${ARGS[/network/nameserver]}"

  cat > /etc/resolv.conf <<EORESOLVCONF
domain local
search local
nameserver $dns
EORESOLVCONF
}

function getWirelessInterfaces() {
  cat /proc/net/wireless | grep -Po '^ \K([A-Za-z0-9]*)(?=:)'
}

function getWiredInterfaces() {
  #match for interface that start with 'e'
  cat /proc/net/dev | grep -Po '^\s*\K(e[A-Za-z0-9]*)(?=:)'
}

[ -n "$CALL" ] && $CALL

