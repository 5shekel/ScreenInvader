#!/bin/bash

. /lounge/triggers/env

FUNCTION="$1"
declare -A DATA="$(janosh /network/.)"

function makeHostname() {
  echo "${DATA[/network/hostname]}" > "/etc/hostname"
}

function makeNetworkDhcp() {
  cat > /etc/network/interfaces <<EODHCPCONF
auto lo
iface lo inet loopback
allow-hotplug ${DATA[/network/interface]}
iface ${DATA[/network/interface]} inet dhcp
EODHCPCONF
}

function makeNetworkMan() {
  cat > /etc/network/interfaces <<EONETCONF
auto lo
iface lo inet loopback
allow-hotplug $interface
iface $interface inet static
address ${DATA[/network/address]}
netmask ${DATA[/network/netmask]}
gateway ${DATA[/network/gateway]}
EONETCONF
}

function makeDns() {
  cat > /etc/resolv.conf <<EORESOLVCONF
domain local
search local
nameserver ${DATA[/network/nameserver]}
EORESOLVCONF
}

function makeWifi() {
  killall -0 wpa_supplicant || wpa_supplicant -B -Dwext -iwlan0 -c /etc/wpa_supplicant/wpa_supplicant.conf
  networks="`wpa_cli list_networks | grep -o "^[0-9]*"`"
  for id in $networks; do
    wpa_cli remove_network "$id"
  done
  wpa_cli add_network
  wpa_cli set_network 0 ssid "\"${DATA[/network/wifi/ssid]}\""
  wpa_cli set_network 0 scan_ssid 1
  wpa_cli set_network 0 key_mgmt "${DATA[/network/wifi/encryption/value]}"
  wpa_cli set_network 0 psk "\"${DATA[/network/wifi/passphrase]}\""
  wpa_cli enable_network 0
}

function readWirelessNic() {
  cat /proc/net/wireless | grep -Po '^ \K([A-Za-z0-9]*)(?=:)'
}

function readWiredNic() {
  cat /proc/net/dev | grep -Po '^\s*\K(e[A-Za-z0-9]*)(?=:)'
}

function restart() {
  killall wpa_supplicant
  killall dhclient
  ifconfig "${DATA[/network/interface]}" down
  ifdown -a
  #http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=550240
  /etc/init.d/networking stop
  /etc/init.d/networking start
  ifup -a 
  ifconfig "${DATA[/network/interface]}" up
  makeWifi
  dhclient "${DATA[/network/interface]}"
}

function reload() {
  return 0
}

if [ "$(type -t "$FUNCTION")" == "function" ]; then
  $FUNCTION
else
  echo "Unknown command: $FUNCTION" 1>&2
  exit 1
fi


